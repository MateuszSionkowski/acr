{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "tenantId": {
      "type": "string",
      "defaultValue": "9882c17f-9662-42ad-bdb0-07923b42850f"
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "cachekv"
    },
    "acrName": {
      "type": "string",
      "defaultValue": "cacheacr2222"
    },
    "loginServer": {
      "type": "string",
      "defaultValue": "docker.io"
    },
    "repoName": {
      "type": "string",
      "defaultValue": "nginx"
    },
    "sourceRepo": {
      "type": "string",
      "defaultValue": "docker.io/library/nginx"
    }
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "tenantId": "[parameters('tenantId')]",
        "enableRbacAuthorization": true,
        "sku": {
          "family": "A",
          "name": "standard"
        }
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2022-12-01",
      "name": "[parameters('acrName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/credentialSets",
      "apiVersion": "2025-04-01",
      "name": "[format('{0}/{1}', parameters('acrName'), 'credentialset')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "loginServer": "[parameters('loginServer')]",
        "authCredentials": [
          {
            "name": "credential1",
            "usernameSecretIdentifier": "[format('https://{0}.vault.azure.net/secrets/repousername', parameters('keyVaultName'))]",
            "passwordSecretIdentifier": "[format('https://{0}.vault.azure.net/secrets/repopassword', parameters('keyVaultName'))]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))]"
      ]
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/cacheRules",
      "apiVersion": "2025-04-01",
      "name": "[format('{0}/{1}', parameters('acrName'), parameters('repoName'))]",
      "properties": {
        "targetRepository": "[parameters('repoName')]",
        "sourceRepository": "[parameters('sourceRepo')]",
        "credentialSetResourceId": "[resourceId('Microsoft.ContainerRegistry/registries/credentialSets', parameters('acrName'), 'credentialset')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))]",
        "[resourceId('Microsoft.ContainerRegistry/registries/credentialSets', parameters('acrName'), 'credentialset')]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
      "name": "[guid(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName')))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
        "principalId": "[reference(resourceId('Microsoft.ContainerRegistry/registries/credentialSets', parameters('acrName'), 'credentialset'), '2025-04-01', 'full').identity.principalId]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))]",
        "[resourceId('Microsoft.ContainerRegistry/registries/credentialSets', parameters('acrName'), 'credentialset')]",
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    }
  ]
}
