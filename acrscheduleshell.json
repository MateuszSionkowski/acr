{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "registryName": {
      "type": "string",
      "defaultValue": "myacrregistry"
    },
    "externalImage": {
      "type": "string",
      "defaultValue": "docker.io/library/nginx:latest"
    },
    "acrRepo": {
      "type": "string",
      "defaultValue": "nginx"
    },
    "taskName": {
      "type": "string",
      "defaultValue": "mirror-latest-task"
    },
    "location": {
      "type": "string",
      "defaultValue": "eastus"
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2025-04-01",
      "location": "[parameters('location')]",
      "name": "[parameters('registryName')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/tasks",
      "apiVersion": "2025-03-01-preview",  
      "location": "[parameters('location')]",
      "name": "[format('{0}/{1}', parameters('registryName'), parameters('taskName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName'))]"
      ],
      "properties": {
        "status": "Enabled",
        "platform": {
          "os": "Linux"
        },
        "agentConfiguration": {
          "cpu": 2
        },
        "step": {
          "type": "EncodedTask",
          "encodedTaskContent": "[variables('taskYaml')]"
        },
        "schedule": {
          "status": "Enabled",
          "triggerType": "Timer",
          "value": "0 2 * * *"
        }
      }
    }
  ],
  "variables": {
    "scriptBody": "[concat('docker pull ', parameters('externalImage'), ' && docker tag ', parameters('externalImage'), ' ', parameters('registryName'), '.azurecr.io/', parameters('acrRepo'), ':latest && docker push ', parameters('registryName'), '.azurecr.io/', parameters('acrRepo'), ':latest')]",
    "taskYaml": "[base64(concat('version: v1.1.0\\nsteps:\\n  - cmd: |\\n      ', variables('scriptBody')))]"
  }
}
