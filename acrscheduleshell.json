{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "registryName": {
      "type": "string",
      "defaultValue": "myacrregistry"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "taskName": {
      "type": "string",
      "defaultValue": "mirror-latest-task"
    },
    "externalImage": {
      "type": "string",
      "defaultValue": "nginx:latest"
    },
    "acrRepo": {
      "type": "string",
      "defaultValue": "nginx"
    },
    "schedule": {
      "type": "string",
      "defaultValue": "0 3 * * *"
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-01-01-preview",
      "name": "[parameters('registryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries/tasks",
      "apiVersion": "2023-01-01-preview",
      "name": "[format('{0}/{1}', parameters('registryName'), parameters('taskName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registryName'))]"
      ],
      "properties": {
        "status": "Enabled",
        "platform": {
          "os": "Linux"
        },
        "agentConfiguration": {
          "cpu": 2
        },
        "statusUpdateTime": null,
        "step": {
          "type": "EncodedTaskStep",
          "contextPath": "https://dev.azure.com/fake/context", 
          "contextAccessToken": "fake", 
          "encodedTaskContent": "[base64(concat('version: v1.1.0\nsteps:\n  - cmd: |\n      docker pull ', parameters('externalImage'), '\n      DIGEST=$(docker inspect --format=\"{{index .RepoDigests 0}}\" ', parameters('externalImage'), ' | cut -d\"@\" -f2)\n      if docker pull ', parameters('registryName'), '.azurecr.io/', parameters('acrRepo'), '@sha256:$DIGEST 2>/dev/null; then\n        echo \"Image already exists in ACR. Skipping.\"\n      else\n        docker tag ', parameters('externalImage'), ' ', parameters('registryName'), '.azurecr.io/', parameters('acrRepo'), ':latest\n        docker push ', parameters('registryName'), '.azurecr.io/', parameters('acrRepo'), ':latest\n      fi')]",
          "values": []
        },
        "trigger": {
          "schedule": {
            "status": "Enabled",
            "cron": "[parameters('schedule')]"
          }
        }
      }
    }
  ]
}
